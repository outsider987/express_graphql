generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model refresh_token {
    id               Int            @id @default(autoincrement())
    user_id          Int            @unique
    refresh_token_id String         @db.VarChar(255)
    token_status     refresh_status @default(active)
    expiresAt        DateTime?      @db.DateTime(0)
    createdAt        DateTime       @default(now())
    updatedAt        DateTime       @updatedAt
    deletedAt        DateTime?      @db.DateTime(0)
    user             user           @relation(fields: [user_id], references: [id])
}

enum refresh_status {
    active
    disabled
}

model user {
    id        Int             @id @default(autoincrement())
    status    users_status    @default(active)
    username  String          @db.VarChar(50)
    email     String          @unique @db.VarChar(50)
    password  String          @db.VarChar(100)
    createdAt DateTime        @default(now())
    updatedAt DateTime        @updatedAt
    deletedAt DateTime?       @db.DateTime(0)
    tokens    refresh_token[]
}

model post {
    id         Int        @id @default(autoincrement())
    createdAt  DateTime   @default(now())
    title      String
    published  Boolean    @default(false)
    author     authour    @relation(fields: [author_id], references: [id])
    author_id  Int
    categories category[]
    body       String
}

model authour {
    id    Int     @id @default(autoincrement())
    email String  @unique
    name  String?
    posts post[]
    bio   String
}

model category {
    id    Int    @id @default(autoincrement())
    name  String
    posts post[]
}

model marvel {
    id                Int     @id @default(autoincrement())
    comic_name        String
    active_years      String
    issue_title       String
    publish_date      String
    issue_description String
    penciler          String
    writer            String
    cover_artist      String
    Imprint           String
    Format            String
    Rating            String
    Price             Decimal
}

enum users_status {
    active
    disabled
}
